{"version":3,"sources":["helpers/index.js","components/shared/Image/Image.js","components/shared/Image/index.js","context/app.js","components/widgets/SocialMedia/SocialMedia.js","components/widgets/SocialMedia/index.js","components/layout/Nav/index.js","components/layout/Nav/Nav.js","components/layout/NavMobile/index.js","components/layout/NavMobile/NavMobile.js","components/shared/Button/Button.js","components/shared/Button/index.js","hooks/useBoolean.js","hooks/useToggle.js","components/widgets/MobileMenu/index.js","components/widgets/MobileMenu/MobileMenu.js","components/layout/Header/index.js","components/layout/Header/Header.js","components/layout/NavBottom/index.js","components/layout/NavBottom/NavBottom.js","components/layout/Footer/index.js","components/layout/Footer/Footer.js","components/layout/Template/index.js","components/layout/Template/Template.js","components/services/RouterOutlet.js","hocs/index.js","routes/index.js","App.js","components/services/ScrollToTop.js","components/services/ErrorBoundary.js","serviceWorker.js","index.js"],"names":["resolvePath","filePath","prefix","arguments","length","undefined","process","concat","startsWith","classnames","_len","classList","Array","_key","join","replace","trim","renderText","text","isArray","map","sentence","index","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_1__","key","renderContent","content","blockName","variant","contentGroup","Object","entries","_ref","_ref2","C_Users_User_Desktop_monday_ieo_ieo_website_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","value","className","Image","src","alt","restProps","objectWithoutProperties","react_default","assign","defaultProps","__webpack_require__","d","__webpack_exports__","AppContext","AppProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","createContext","children","Provider","SocialMedia","contacts","_ref$justify","justify","style","justifyContent","contact","type","href","link","target","rel","icon","Nav","links","react_router_dom","activeClassName","name","to","isActive","_","pathname","category","split","NavMobile","config","renderLink","_ref3","slicedToArray","title","Button","useBoolean","initialValue","_useState","useState","_useState2","setValue","toggle","useCallback","setTrue","setFalse","useToggle","_useBoolean","MobileMenu","_useToggle","isVisible","Fragment","shared_Button","onClick","react_fontawesome_index_es","faTimes","faBars","size","Header","_ref$variant","logo","navigation","widgets_MobileMenu","layout_NavMobile","sub","layout_Nav","main","NavBottom","Footer","copyright","layout_NavBottom","Template","withRouter","location","_useContext$template","useContext","template","header","footer","layout_Header","layout_Footer","RouterOutlet","routes","_ref$fallback","fallback","react","react_router","route","path","withProps","WrappedComponent","props","Home","lazy","e","then","bind","KeyRoles","General","ContactUs","NotFound","exact","render","App","layout_Template","services_RouterOutlet","ScrollToTop","prevProps","this","window","scrollTo","Component","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","error","info","setState","_this$state","whiteSpace","toString","componentStack","Boolean","hostname","match","library","add","faChevronRight","faChevronLeft","file","Index","data","services_ErrorBoundary","app","basename","services_ScrollToTop","src_App","RootElement","document","getElementById","fetch","response","json","src_Index","catch","console","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e2f9991.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nexport const resolvePath = (\r\n  filePath, \r\n  prefix = process.env.PUBLIC_URL.concat('/')\r\n) =>\r\n  filePath.startsWith('http')\r\n    ? filePath\r\n    : prefix.concat(filePath);\r\n\r\nexport const classnames = (...classList) => \r\n  classList\r\n    .join(' ')\r\n    .replace(/\\s+/g, ' ')\r\n    .trim();\r\n\r\nexport const renderText = (text) =>\r\n  Array.isArray(text)\r\n    ? text.map((sentence, index) => (\r\n      <Fragment \r\n        key={sentence}\r\n      >\r\n        {sentence} \r\n        {index < text.length - 1  && <br />}\r\n      </Fragment>\r\n    ))\r\n    : text;\r\n\r\n// TODO: Each child in a list should have a unique \"key\" prop\r\nexport const renderContent = (content, blockName, variant) => \r\n  content.map(contentGroup => {\r\n    return Object.entries(contentGroup).map(([ key, value ]) => {\r\n      switch (key) {\r\n      case 'title': \r\n        return (\r\n          <h3\r\n            key={value}\r\n            className={classnames(\r\n              `${blockName}__title`,\r\n              variant ? `${blockName}__title--theme-${variant}` : ''\r\n            )}\r\n          >\r\n            {renderText(value)}\r\n          </h3>\r\n        );\r\n      case 'text': \r\n        return (\r\n          <div \r\n            className={`${blockName}__text-group`}\r\n          >\r\n            {Array.isArray(value)\r\n              ? value.map(text => (\r\n                <p \r\n                  key={text}              \r\n                  className={`${blockName}__text`}\r\n                >\r\n                  {renderText(text)}\r\n                </p>\r\n              ))\r\n              : renderText(value)}\r\n          </div>\r\n        );\r\n      default: \r\n        return '';\r\n      }\r\n    });\r\n  });","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { resolvePath } from '../../../helpers';\r\n\r\nimport './Image.scss';\r\n\r\nconst Image = ({ src, alt, ...restProps }) => (\r\n  <img src={resolvePath(src)} alt={alt} {...restProps} />\r\n);\r\n\r\nImage.defaultProps = {\r\n  alt: '',\r\n};\r\n\r\nImage.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nexport default Image;","import Image from './Image';\r\n\r\nexport default Image;","import React, { createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ value, children }) => (\r\n  <AppContext.Provider \r\n    {...{value}}\r\n  >\r\n    {children}\r\n  </AppContext.Provider>\r\n);\r\n\r\nAppProvider.propTypes = {\r\n  value: PropTypes.any.isRequired,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport {\r\n  AppContext,\r\n  AppProvider,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Image from '../../shared/Image';\r\n\r\nimport './SocialMedia.scss';\r\n\r\nconst SocialMedia = ({ contacts, justify = 'flex-start' }) => {\r\n  const renderSocialMediaLink = (contact) => (\r\n    <a \r\n      key={contact.type} \r\n      className=\"social-media__link\"\r\n      href={contact.link} \r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <Image \r\n        className=\"social-media__icon\" \r\n        src={contact.icon} \r\n        alt={contact.type} \r\n      />\r\n    </a>\r\n  ); \r\n\r\n  return (\r\n    <div \r\n      className=\"social-media\"\r\n      style={{\r\n        justifyContent: justify\r\n      }}  \r\n    >\r\n      {contacts.map(renderSocialMediaLink)}\r\n    </div>\r\n  );\r\n};\r\n\r\nSocialMedia.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  justify: PropTypes.oneOf([\r\n    'flex-start',\r\n    'flex-end',\r\n    'center',\r\n    'space-between',\r\n    'space-around',\r\n    'space-evenly',\r\n  ]),\r\n};\r\n\r\nexport default SocialMedia;","import SocialMedia from './SocialMedia';\r\n\r\nexport default SocialMedia;","import Nav from './Nav';\r\n\r\nexport default Nav;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Nav.scss';\r\n\r\nimport { classnames } from '../../../helpers';\r\n\r\nconst Nav = ({ links }) => {\r\n  const isActive = (to) => (_, { pathname }) => {\r\n    if (pathname === '/') return false;\r\n\r\n    const category = pathname.replace(/^\\//, '').split('/')[0];\r\n\r\n    return to.startsWith(`/${category}`);\r\n  }; \r\n\r\n  const renderNavLink = (link) => (\r\n    <NavLink \r\n      className=\"nav__link\" \r\n      activeClassName={classnames(\r\n        'nav__link--active',\r\n        link.variant ? `nav__link--${link.variant}` : ''\r\n      )} \r\n      key={link.name} \r\n      to={link.to}\r\n      isActive={isActive(link.to)}\r\n    >\r\n      {link.name}\r\n    </NavLink>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      {links && links.map(renderNavLink)}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      to: PropTypes.string.isRequired,\r\n      variant: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Nav;","import NavMobile from './NavMobile';\r\n\r\nexport default NavMobile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NavMobile.scss';\r\n\r\nconst NavMobile = ({ config }) => {\r\n  const renderNavGroup = ([ title, links ]) => (\r\n    <div key={title} className=\"nav-mobile__group\">\r\n      <h5 className=\"nav-mobile__group-title\">{title}</h5>\r\n      {links.map(renderLink)}\r\n    </div>\r\n  );\r\n\r\n  const renderLink = (link) => (\r\n    <Link key={link.name} className=\"nav-mobile__link\" to={link.to}>{link.name}</Link>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-mobile\">\r\n      {Object.entries(config).map(renderNavGroup)}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavMobile.propTypes = {\r\n  config: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NavMobile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ children, ...restProps }) => (\r\n  <button {...restProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  type: PropTypes.oneOf([ 'button', 'reset', 'submit' ]),\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Button;","import Button from './Button';\r\n\r\nexport default Button;","import { useState, useCallback } from 'react';\r\n\r\nconst useBoolean = (initialValue = false) => {\r\n  const [ value, setValue ] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    toggle: useCallback(() => setValue(value => !value), []),\r\n    setTrue: useCallback(() => setValue(true), []),\r\n    setFalse: useCallback(() => setValue(false), []),\r\n  };\r\n};\r\n\r\nexport default useBoolean;","import useBoolean from './useBoolean';\r\n\r\nconst useToggle = (initialValue) => {\r\n  const { value, toggle } = useBoolean(initialValue);\r\n\r\n  return {\r\n    value,\r\n    toggle,\r\n  };\r\n};\r\n\r\nexport default useToggle;","import MobileMenu from './MobileMenu';\r\n\r\nexport default MobileMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Button from '../../shared/Button';\r\n\r\nimport useToggle from '../../../hooks/useToggle';\r\nimport { classnames } from '../../../helpers';\r\n\r\nimport './MobileMenu.scss';\r\n\r\nconst MobileMenu = ({ children }) => {\r\n  const { value: isVisible, toggle } = useToggle(false);\r\n\r\n  return (\r\n    <>\r\n      <Button \r\n        className=\"mobile-menu-switch\"\r\n        onClick={toggle}  \r\n      >\r\n        <FontAwesomeIcon \r\n          className=\"mobile-menu-switch__icon\"\r\n          icon={isVisible ? faTimes : faBars} \r\n          size=\"lg\"  \r\n        />\r\n      </Button>\r\n      <section \r\n        className={classnames(\r\n          'mobile-menu',\r\n          `mobile-menu--is-${isVisible ? 'visible' : 'hidden'}`\r\n        )}\r\n        onClick={toggle}\r\n      >\r\n        <Button className=\"mobile-menu__close\">\r\n          <FontAwesomeIcon \r\n            icon={faTimes} \r\n            size=\"lg\"  \r\n          />\r\n        </Button>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nMobileMenu.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default MobileMenu;","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Image from '../../shared/Image';\r\nimport Nav from '../Nav';\r\nimport NavMobile from '../NavMobile';\r\nimport MobileMenu from '../../widgets/MobileMenu';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = ({ variant = 'light', logo, navigation }) => (\r\n  <header className={`header header--theme-${variant}`}>\r\n    <div className=\"container container--wide\">\r\n      <main className=\"header__main\">\r\n        <MobileMenu>\r\n          <NavMobile config={navigation.sub} />\r\n        </MobileMenu>\r\n        <Nav links={navigation.main} />\r\n        <Link to=\"/\">\r\n          <Image className=\"logo\" {...logo} />\r\n        </Link>\r\n      </main>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  variant: PropTypes.oneOf([\r\n    'gray', 'light'\r\n  ]),\r\n  logo: PropTypes.shape({\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n  }).isRequired,\r\n  navigation: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Header;","import NavBottom from './NavBottom';\r\n\r\nexport default NavBottom;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NavBottom.scss';\r\n\r\nconst NavBottom = ({ config }) => {\r\n  const renderNavGroup = ([ title, links ]) => (\r\n    <div key={title} className=\"nav-bottom__group\">\r\n      <h5 className=\"nav-bottom__group-title\">{title}</h5>\r\n      {links.map(renderLink)}\r\n    </div>\r\n  );\r\n\r\n  const renderLink = (link) => (\r\n    <Link key={link.name} className=\"nav-bottom__link\" to={link.to}>{link.name}</Link>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-bottom\">\r\n      {Object.entries(config).map(renderNavGroup)}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBottom.propTypes = {\r\n  config: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NavBottom;","import Footer from './Footer';\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NavBottom from '../NavBottom';\r\nimport SocialMedia from '../../widgets/SocialMedia';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({ variant = 'light', navigation, contacts, copyright }) => (\r\n  <footer className={`footer footer--theme-${variant}`}>\r\n    <div className=\"container container--normal\">\r\n      <main className=\"footer__main\">\r\n        <NavBottom config={navigation.sub} />\r\n        {variant === 'light' && (\r\n          <SocialMedia {...{contacts}} />\r\n        )}\r\n        <p className=\"copyright\">{copyright}</p>\r\n      </main>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n\r\nFooter.propTypes = {\r\n  variant: PropTypes.oneOf([\r\n    'gray', 'light'\r\n  ]),\r\n  navigation: PropTypes.object.isRequired,\r\n  contacts: PropTypes.array,\r\n  copyright: PropTypes.string.isRequired,\r\n};","import Template from './Template';\r\n\r\nexport default Template;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\n\r\nimport { AppContext } from '../../../context/app';\r\n\r\nimport './Template.scss';\r\n\r\nconst Template = ({ children, location }) => {\r\n  const variant = location.pathname === '/' ? 'gray' : 'light';\r\n\r\n  const { template: {\r\n    header,\r\n    footer,\r\n    navigation,\r\n  } } = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <Header {...{variant}} {...header} {...{navigation}} />\r\n      <main className=\"main\">\r\n        {children}\r\n      </main>\r\n      <Footer {...{variant}} {...footer} {...{navigation}} />\r\n    </>\r\n  );\r\n};\r\n\r\nTemplate.propTypes = {\r\n  children: PropTypes.any,\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(Template);","import React, { Suspense } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouterOutlet = ({ routes, fallback = null }) => {\r\n  const renderRoute = (route) => (\r\n    <Route key={route.path} {...route} />\r\n  );\r\n\r\n  return (\r\n    <Suspense fallback={fallback}>\r\n      <Switch>\r\n        {routes.map(renderRoute)}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nRouterOutlet.propTypes = {\r\n  routes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      path: PropTypes.string.isRequired,\r\n      exact: PropTypes.bool,\r\n      render: PropTypes.func.isRequired,\r\n      component: PropTypes.node,\r\n    })\r\n  ).isRequired,\r\n  fallback: PropTypes.any,\r\n};\r\n\r\nexport default RouterOutlet;","/* eslint-disable react/display-name */\r\nimport React from 'react';\r\n\r\nexport const withProps = (WrappedComponent) => (props) => (\r\n  <WrappedComponent {...props} />\r\n);","import { lazy } from 'react';\r\n\r\nimport { withProps } from '../hocs';\r\n\r\nconst Home = lazy(() => import('../pages/Home'));\r\nconst KeyRoles = lazy(() => import('../pages/KeyRoles'));\r\nconst General = lazy(() => import('../pages/General'));\r\nconst ContactUs = lazy(() => import('../pages/ContactUs'));\r\nconst NotFound = lazy(() => import('../pages/NotFound'));\r\n\r\n/**\r\n * TODO: configure independent routing\r\n */\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    render: withProps(Home),\r\n  }, {\r\n    path: '/about/key-roles',\r\n    render: withProps(KeyRoles),\r\n  }, {\r\n    path: '/contact-us',\r\n    render: withProps(ContactUs),\r\n  }, {\r\n    path: '/:category?/:name',\r\n    render: withProps(General),\r\n  }, {\r\n    path: '*',\r\n    render: withProps(NotFound),\r\n  }\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\n\r\nimport Template from './components/layout/Template';\r\nimport RouterOutlet from './components/services/RouterOutlet';\r\n\r\nimport routes from './routes';\r\n\r\nconst App = () => (\r\n  <main className=\"app\">\r\n    <Template>\r\n      <RouterOutlet {...{routes}} />\r\n    </Template>\r\n  </main>\r\n);\r\n\r\nexport default App;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nScrollToTop.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default withRouter(ScrollToTop);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: false,\r\n      info: null,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      error,\r\n      info\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, info } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <details \r\n            style={{ whiteSpace: 'pre-wrap' }}\r\n          >\r\n            <summary>Something went wrong</summary>\r\n            <p>{error.toString()}</p>\r\n            <hr />\r\n            <p>{info.componentStack}</p>\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default ErrorBoundary;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport App from './App';\r\nimport { AppProvider } from './context/app';\r\nimport ScrollToTop from './components/services/ScrollToTop';\r\nimport ErrorBoundary from './components/services/ErrorBoundary';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { resolvePath } from './helpers';\r\n\r\nimport './styles/main.scss';\r\n\r\nlibrary.add(\r\n  faChevronRight,\r\n  faChevronLeft,\r\n);\r\n\r\nconst Index = ({ data }) => (\r\n  <ErrorBoundary>\r\n    <AppProvider value={data}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <ScrollToTop>\r\n          <App />\r\n        </ScrollToTop>\r\n      </Router>\r\n    </AppProvider>\r\n  </ErrorBoundary>\r\n);\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n};\r\n\r\nconst RootElement = document.getElementById('root');\r\n\r\nconst setup = (file) => {\r\n  fetch(resolvePath(file))\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      render(\r\n        <Index {...{data}} />,\r\n        RootElement \r\n      );\r\n    })\r\n    // eslint-disable-next-line no-console\r\n    .catch(console.error);\r\n};\r\n\r\nsetup('data.json');\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}