{"version":3,"sources":["components/shared/Image/Image.js","components/shared/Image/index.js","components/layout/Nav/index.js","components/layout/Nav/Nav.js","components/layout/Header/index.js","components/layout/Header/Header.js","components/layout/NavBottom/index.js","components/layout/NavBottom/NavBottom.js","components/layout/Footer/index.js","components/layout/Footer/Footer.js","components/layout/Template/index.js","components/layout/Template/Template.js","components/services/RouterOutlet.js","hocs/index.js","routes/index.js","App.js","components/services/ErrorBoundary.js","serviceWorker.js","index.js","context/app.js","helpers/index.js"],"names":["Image","_ref","src","alt","restProps","Object","objectWithoutProperties","react_default","a","createElement","assign","resolvePath","defaultProps","Nav","links","className","map","link","react_router_dom","activeClassName","key","name","to","strict","Header","_ref$variant","variant","logo","navigation","concat","layout_Nav","NavBottom","config","renderLink","entries","_ref2","_ref3","slicedToArray","title","Footer","copyright","layout_NavBottom","Template","withRouter","children","location","pathname","_useContext$template","useContext","AppContext","template","header","footer","Fragment","layout_Header","layout_Footer","RouterOutlet","routes","_ref$fallback","fallback","react","react_router","route","path","withProps","WrappedComponent","props","Home","lazy","__webpack_require__","e","then","bind","KeyRoles","exact","render","App","layout_Template","services_RouterOutlet","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","info","setState","_this$state","style","whiteSpace","toString","componentStack","Component","Boolean","window","hostname","match","file","Index","data","services_ErrorBoundary","app","value","basename","process","src_App","RootElement","document","getElementById","fetch","response","json","src_Index","catch","console","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","AppProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","createContext","Provider","classnames","filePath","prefix","arguments","length","undefined","startsWith","_len","classList","Array","_key","join","replace","trim"],"mappings":"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","file":"static/js/main.b4d0131b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { resolvePath } from '../../../helpers';\n\nimport './Image.scss';\n\nconst Image = ({ src, alt, ...restProps }) => (\n  <img src={resolvePath(src)} alt={alt} {...restProps} />\n);\n\nImage.defaultProps = {\n  alt: '',\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default Image;","import Image from './Image';\n\nexport default Image;","import Nav from './Nav';\n\nexport default Nav;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport './Nav.scss';\n\nconst Nav = ({ links }) => {\n  const renderNavLink = (link) => (\n    <NavLink \n      className=\"nav__link\" \n      activeClassName=\"nav__link--active\" \n      key={link.name} \n      to={link.to}\n      strict\n    >\n      {link.name}\n    </NavLink>\n  );\n\n  return (\n    <nav className=\"nav\">\n      {links && links.map(renderNavLink)}\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      to: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Nav;","import Header from './Header';\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Image from '../../shared/Image';\nimport Nav from '../Nav';\n\nimport './Header.scss';\n\nconst Header = ({ variant = 'light', logo, navigation }) => (\n  <header className={`header header--theme-${variant}`}>\n    <div className=\"container container--wide\">\n      <main className=\"header__main\">\n        <Nav links={navigation} />\n        <Link to=\"/\">\n          <Image className=\"logo\" {...logo} />\n        </Link>\n      </main>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  variant: PropTypes.oneOf([\n    'gray', 'light'\n  ]),\n  logo: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n  }).isRequired,\n  navigation: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      to: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Header;","import NavBottom from './NavBottom';\n\nexport default NavBottom;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './NavBottom.scss';\n\nconst NavBottom = ({ config }) => {\n  const renderNavGroup = ([ title, links ]) => (\n    <div key={title} className=\"nav-bottom__group\">\n      <h5 className=\"nav-bottom__group-title\">{title}</h5>\n      {links.map(renderLink)}\n    </div>\n  );\n\n  const renderLink = (link) => (\n    <Link key={link.name} className=\"nav-bottom__link\" to={link.to}>{link.name}</Link>\n  );\n\n  return (\n    <nav className=\"nav-bottom\">\n      {Object.entries(config).map(renderNavGroup)}\n    </nav>\n  );\n};\n\nNavBottom.propTypes = {\n  config: PropTypes.object.isRequired,\n};\n\nexport default NavBottom;","import Footer from './Footer';\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NavBottom from '../NavBottom';\n\nimport './Footer.scss';\n\nconst Footer = ({ variant = 'light', navigation, copyright }) => (\n  <footer className={`footer footer--theme-${variant}`}>\n    <div className=\"container container--normal\">\n      <main className=\"footer__main\">\n        <NavBottom config={navigation} />\n        <p className=\"copyright\">{copyright}</p>\n      </main>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n\nFooter.propTypes = {\n  variant: PropTypes.oneOf([\n    'gray', 'light'\n  ]),\n  navigation: PropTypes.object.isRequired,\n  copyright: PropTypes.string.isRequired,\n};","import Template from './Template';\n\nexport default Template;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\n\nimport { AppContext } from '../../../context/app';\n\nimport './Template.scss';\n\nconst Template = ({ children, location }) => {\n  const variant = location.pathname === '/' ? 'gray' : 'light';\n\n  const { template: {\n    header,\n    footer\n  } } = useContext(AppContext);\n\n  return (\n    <>\n      <Header {...{variant}} {...header} />\n      {children}\n      <Footer {...{variant}} {...footer} />\n    </>\n  );\n};\n\nTemplate.propTypes = {\n  children: PropTypes.any,\n  location: PropTypes.object,\n};\n\nexport default withRouter(Template);","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouterOutlet = ({ routes, fallback = null }) => {\n  const renderRoute = (route) => (\n    <Route key={route.path} {...route} />\n  );\n\n  return (\n    <Suspense fallback={fallback}>\n      <Switch>\n        {routes.map(renderRoute)}\n      </Switch>\n    </Suspense>\n  );\n};\n\nRouterOutlet.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      exact: PropTypes.bool,\n      render: PropTypes.func.isRequired,\n      component: PropTypes.node,\n    })\n  ).isRequired,\n  fallback: PropTypes.any,\n};\n\nexport default RouterOutlet;","/* eslint-disable react/display-name */\nimport React from 'react';\n\nexport const withProps = (WrappedComponent) => (props) => (\n  <WrappedComponent {...props} />\n);","import { lazy } from 'react';\n\nimport { withProps } from '../hocs';\n\nconst Home = lazy(() => import('../pages/Home'));\nconst KeyRoles = lazy(() => import('../pages/KeyRoles'));\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    render: withProps(Home),\n  }, {\n    path: '/about/key-roles',\n    render: withProps(KeyRoles),\n  }\n];\n\nexport default routes;","import React from 'react';\n\nimport Template from './components/layout/Template';\nimport RouterOutlet from './components/services/RouterOutlet';\n\nimport routes from './routes';\n\nconst App = () => (\n  <main className=\"app\">\n    <Template>\n      <RouterOutlet {...{routes}} />\n    </Template>\n  </main>\n);\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      info: null,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      error,\n      info\n    });\n  }\n\n  render() {\n    const { error, info } = this.state;\n\n    if (error) {\n      return (\n        <div className=\"error-boundary\">\n          <details \n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            <summary>Something went wrong</summary>\n            <p>{error.toString()}</p>\n            <hr />\n            <p>{info.componentStack}</p>\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default ErrorBoundary;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport App from './App';\nimport { AppProvider } from './context/app';\nimport ErrorBoundary from './components/services/ErrorBoundary';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { resolvePath } from './helpers';\n\nimport './styles/main.scss';\n\nconst Index = ({ data }) => (\n  <ErrorBoundary>\n    <AppProvider value={data}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </AppProvider>\n  </ErrorBoundary>\n);\n\nIndex.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n  ]).isRequired,\n};\n\nconst RootElement = document.getElementById('root');\n\nconst setup = (file) => {\n  fetch(resolvePath(file))\n    .then(response => response.json())\n    .then(data => {\n      render(\n        <Index {...{data}} />,\n        RootElement \n      );\n    })\n    // eslint-disable-next-line no-console\n    .catch(console.error);\n};\n\nsetup('data.json');\n\nserviceWorker.unregister();\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ value, children }) => (\n  <AppContext.Provider \n    {...{value}}\n  >\n    {children}\n  </AppContext.Provider>\n);\n\nAppProvider.propTypes = {\n  value: PropTypes.any.isRequired,\n  children: PropTypes.any,\n};\n\nexport {\n  AppContext,\n  AppProvider,\n};","import React, { Fragment } from 'react';\n\nexport const resolvePath = (\n  filePath, \n  prefix = process.env.PUBLIC_URL.concat('/')\n) =>\n  filePath.startsWith('http')\n    ? filePath\n    : prefix.concat(filePath);\n\nexport const classnames = (...classList) => \n  classList\n    .join(' ')\n    .replace(/\\s+/g, ' ')\n    .trim();\n\nexport const renderText = (text) =>\n  Array.isArray(text)\n    ? text.map(sentence => <Fragment key={sentence}>{sentence} <br /></Fragment>)\n    : text;"],"sourceRoot":""}