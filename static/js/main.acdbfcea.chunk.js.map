{"version":3,"sources":["components/shared/Image/Image.js","components/shared/Image/index.js","components/layout/Nav/index.js","components/layout/Nav/Nav.js","components/layout/Header/index.js","components/layout/Header/Header.js","components/layout/NavBottom/index.js","components/layout/NavBottom/NavBottom.js","components/layout/Footer/index.js","components/layout/Footer/Footer.js","components/layout/Template/index.js","components/layout/Template/Template.js","components/services/RouterOutlet.js","hocs/index.js","routes/index.js","App.js","components/services/ErrorBoundary.js","serviceWorker.js","index.js","helpers/index.js","context/app.js"],"names":["Image","_ref","src","alt","restProps","Object","objectWithoutProperties","react_default","a","createElement","assign","resolvePath","defaultProps","Nav","links","className","map","link","react_router_dom","activeClassName","classnames","variant","concat","key","name","to","exact","Header","_ref$variant","logo","navigation","layout_Nav","NavBottom","config","renderLink","entries","_ref2","_ref3","slicedToArray","title","Footer","copyright","layout_NavBottom","Template","withRouter","children","location","pathname","_useContext$template","useContext","AppContext","template","header","footer","Fragment","layout_Header","layout_Footer","RouterOutlet","routes","_ref$fallback","fallback","react","react_router","route","path","withProps","WrappedComponent","props","Home","lazy","Promise","all","__webpack_require__","e","then","bind","KeyRoles","General","render","App","layout_Template","services_RouterOutlet","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","info","setState","_this$state","style","whiteSpace","toString","componentStack","Component","Boolean","window","hostname","match","file","Index","data","services_ErrorBoundary","app","value","basename","process","src_App","RootElement","document","getElementById","fetch","response","json","src_Index","catch","console","navigator","serviceWorker","ready","registration","unregister","filePath","prefix","arguments","length","undefined","startsWith","_len","classList","Array","_key","join","replace","trim","renderText","text","isArray","sentence","index","react__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_1__","renderContent","content","blockName","contentGroup","C_Users_User_Desktop_monday_ieo_ieo_website_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","d","__webpack_exports__","AppProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","createContext","Provider"],"mappings":"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","file":"static/js/main.acdbfcea.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { resolvePath } from '../../../helpers';\r\n\r\nimport './Image.scss';\r\n\r\nconst Image = ({ src, alt, ...restProps }) => (\r\n  <img src={resolvePath(src)} alt={alt} {...restProps} />\r\n);\r\n\r\nImage.defaultProps = {\r\n  alt: '',\r\n};\r\n\r\nImage.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nexport default Image;","import Image from './Image';\r\n\r\nexport default Image;","import Nav from './Nav';\r\n\r\nexport default Nav;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Nav.scss';\r\n\r\nimport { classnames } from '../../../helpers';\r\n\r\nconst Nav = ({ links }) => {\r\n  const renderNavLink = (link) => (\r\n    <NavLink \r\n      className=\"nav__link\" \r\n      activeClassName={classnames(\r\n        'nav__link--active',\r\n        link.variant ? `nav__link--${link.variant}` : ''\r\n      )} \r\n      key={link.name} \r\n      to={link.to}\r\n      exact\r\n    >\r\n      {link.name}\r\n    </NavLink>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      {links && links.map(renderNavLink)}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      to: PropTypes.string.isRequired,\r\n      variant: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Nav;","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Image from '../../shared/Image';\r\nimport Nav from '../Nav';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = ({ variant = 'light', logo, navigation }) => (\r\n  <header className={`header header--theme-${variant}`}>\r\n    <div className=\"container container--wide\">\r\n      <main className=\"header__main\">\r\n        <Nav links={navigation} />\r\n        <Link to=\"/\">\r\n          <Image className=\"logo\" {...logo} />\r\n        </Link>\r\n      </main>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  variant: PropTypes.oneOf([\r\n    'gray', 'light'\r\n  ]),\r\n  logo: PropTypes.shape({\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n  }).isRequired,\r\n  navigation: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      to: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Header;","import NavBottom from './NavBottom';\r\n\r\nexport default NavBottom;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './NavBottom.scss';\r\n\r\nconst NavBottom = ({ config }) => {\r\n  const renderNavGroup = ([ title, links ]) => (\r\n    <div key={title} className=\"nav-bottom__group\">\r\n      <h5 className=\"nav-bottom__group-title\">{title}</h5>\r\n      {links.map(renderLink)}\r\n    </div>\r\n  );\r\n\r\n  const renderLink = (link) => (\r\n    <Link key={link.name} className=\"nav-bottom__link\" to={link.to}>{link.name}</Link>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav-bottom\">\r\n      {Object.entries(config).map(renderNavGroup)}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBottom.propTypes = {\r\n  config: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default NavBottom;","import Footer from './Footer';\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NavBottom from '../NavBottom';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({ variant = 'light', navigation, copyright }) => (\r\n  <footer className={`footer footer--theme-${variant}`}>\r\n    <div className=\"container container--normal\">\r\n      <main className=\"footer__main\">\r\n        <NavBottom config={navigation} />\r\n        <p className=\"copyright\">{copyright}</p>\r\n      </main>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n\r\nFooter.propTypes = {\r\n  variant: PropTypes.oneOf([\r\n    'gray', 'light'\r\n  ]),\r\n  navigation: PropTypes.object.isRequired,\r\n  copyright: PropTypes.string.isRequired,\r\n};","import Template from './Template';\r\n\r\nexport default Template;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\n\r\nimport { AppContext } from '../../../context/app';\r\n\r\nimport './Template.scss';\r\n\r\nconst Template = ({ children, location }) => {\r\n  const variant = location.pathname === '/' ? 'gray' : 'light';\r\n\r\n  const { template: {\r\n    header,\r\n    footer\r\n  } } = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <Header {...{variant}} {...header} />\r\n      {children}\r\n      <Footer {...{variant}} {...footer} />\r\n    </>\r\n  );\r\n};\r\n\r\nTemplate.propTypes = {\r\n  children: PropTypes.any,\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(Template);","import React, { Suspense } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouterOutlet = ({ routes, fallback = null }) => {\r\n  const renderRoute = (route) => (\r\n    <Route key={route.path} {...route} />\r\n  );\r\n\r\n  return (\r\n    <Suspense fallback={fallback}>\r\n      <Switch>\r\n        {routes.map(renderRoute)}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nRouterOutlet.propTypes = {\r\n  routes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      path: PropTypes.string.isRequired,\r\n      exact: PropTypes.bool,\r\n      render: PropTypes.func.isRequired,\r\n      component: PropTypes.node,\r\n    })\r\n  ).isRequired,\r\n  fallback: PropTypes.any,\r\n};\r\n\r\nexport default RouterOutlet;","/* eslint-disable react/display-name */\r\nimport React from 'react';\r\n\r\nexport const withProps = (WrappedComponent) => (props) => (\r\n  <WrappedComponent {...props} />\r\n);","import { lazy } from 'react';\r\n\r\nimport { withProps } from '../hocs';\r\n\r\nconst Home = lazy(() => import('../pages/Home'));\r\nconst KeyRoles = lazy(() => import('../pages/KeyRoles'));\r\nconst General = lazy(() => import('../pages/General'));\r\n\r\n/**\r\n * TODO: configure independent routing\r\n */\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    render: withProps(Home),\r\n  }, {\r\n    path: '/about/key-roles',\r\n    render: withProps(KeyRoles),\r\n  }, {\r\n    path: '/:category?/:name',\r\n    render: withProps(General),\r\n  }\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\n\r\nimport Template from './components/layout/Template';\r\nimport RouterOutlet from './components/services/RouterOutlet';\r\n\r\nimport routes from './routes';\r\n\r\nconst App = () => (\r\n  <main className=\"app\">\r\n    <Template>\r\n      <RouterOutlet {...{routes}} />\r\n    </Template>\r\n  </main>\r\n);\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: false,\r\n      info: null,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      error,\r\n      info\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, info } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <details \r\n            style={{ whiteSpace: 'pre-wrap' }}\r\n          >\r\n            <summary>Something went wrong</summary>\r\n            <p>{error.toString()}</p>\r\n            <hr />\r\n            <p>{info.componentStack}</p>\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default ErrorBoundary;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport App from './App';\r\nimport { AppProvider } from './context/app';\r\nimport ErrorBoundary from './components/services/ErrorBoundary';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { resolvePath } from './helpers';\r\n\r\nimport './styles/main.scss';\r\n\r\nconst Index = ({ data }) => (\r\n  <ErrorBoundary>\r\n    <AppProvider value={data}>\r\n      {/* TODO: configure independent routing */}\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </Router>\r\n    </AppProvider>\r\n  </ErrorBoundary>\r\n);\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n};\r\n\r\nconst RootElement = document.getElementById('root');\r\n\r\nconst setup = (file) => {\r\n  fetch(resolvePath(file))\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      render(\r\n        <Index {...{data}} />,\r\n        RootElement \r\n      );\r\n    })\r\n    // eslint-disable-next-line no-console\r\n    .catch(console.error);\r\n};\r\n\r\nsetup('data.json');\r\n\r\nserviceWorker.unregister();\r\n","import React, { Fragment } from 'react';\r\n\r\nexport const resolvePath = (\r\n  filePath, \r\n  prefix = process.env.PUBLIC_URL.concat('/')\r\n) =>\r\n  filePath.startsWith('http')\r\n    ? filePath\r\n    : prefix.concat(filePath);\r\n\r\nexport const classnames = (...classList) => \r\n  classList\r\n    .join(' ')\r\n    .replace(/\\s+/g, ' ')\r\n    .trim();\r\n\r\nexport const renderText = (text) =>\r\n  Array.isArray(text)\r\n    ? text.map((sentence, index) => (\r\n      <Fragment \r\n        key={sentence}\r\n      >\r\n        {sentence} \r\n        {index < text.length - 1  && <br />}\r\n      </Fragment>\r\n    ))\r\n    : text;\r\n\r\n// TODO: Each child in a list should have a unique \"key\" prop\r\nexport const renderContent = (content, blockName, variant) => \r\n  content.map(contentGroup => {\r\n    return Object.entries(contentGroup).map(([ key, value ]) => {\r\n      switch (key) {\r\n      case 'title': \r\n        return (\r\n          <h3\r\n            key={value}\r\n            className={classnames(\r\n              `${blockName}__title`,\r\n              variant ? `${blockName}__title--theme-${variant}` : ''\r\n            )}\r\n          >\r\n            {value}\r\n          </h3>\r\n        );\r\n      case 'text': \r\n        return (\r\n          <div \r\n            className={`${blockName}__text-group`}\r\n          >\r\n            {Array.isArray(value)\r\n              ? value.map(text => (\r\n                <p \r\n                  key={text}              \r\n                  className={`${blockName}__text`}\r\n                >\r\n                  {renderText(text)}\r\n                </p>\r\n              ))\r\n              : renderText(value)}\r\n          </div>\r\n        );\r\n      default: \r\n        return '';\r\n      }\r\n    });\r\n  });","import React, { createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ value, children }) => (\r\n  <AppContext.Provider \r\n    {...{value}}\r\n  >\r\n    {children}\r\n  </AppContext.Provider>\r\n);\r\n\r\nAppProvider.propTypes = {\r\n  value: PropTypes.any.isRequired,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport {\r\n  AppContext,\r\n  AppProvider,\r\n};"],"sourceRoot":""}