{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HenY\\\\Documents\\\\GitHub\\\\ieo-rep\\\\ieo-website\\\\src\\\\index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport App from './App';\nimport { AppProvider } from './context/app';\nimport ScrollToTop from './components/services/ScrollToTop';\nimport ErrorBoundary from './components/services/ErrorBoundary';\nimport * as serviceWorker from './serviceWorker';\nimport { resolvePath } from './helpers';\nimport './styles/main.scss';\nlibrary.add(faChevronRight, faChevronLeft);\n\nconst Index = ({\n  data\n}) => React.createElement(ErrorBoundary, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(AppProvider, {\n  value: data,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Router, {\n  basename: process.env.PUBLIC_URL,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(ScrollToTop, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})))));\n\nIndex.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nconst RootElement = document.getElementById('root');\n\nconst setup = file => {\n  fetch(resolvePath(file)).then(response => response.json()).then(data => {\n    render(React.createElement(Index, Object.assign({\n      data\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), RootElement);\n  }) // eslint-disable-next-line no-console\n  .catch(console.error);\n};\n\nsetup('data.json');\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\HenY\\Documents\\GitHub\\ieo-rep\\ieo-website\\src\\index.js"],"names":["React","render","HashRouter","Router","PropTypes","library","faChevronRight","faChevronLeft","App","AppProvider","ScrollToTop","ErrorBoundary","serviceWorker","resolvePath","add","Index","data","process","env","PUBLIC_URL","propTypes","oneOfType","array","object","isRequired","RootElement","document","getElementById","setup","file","fetch","then","response","json","catch","console","error","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,UAAU,IAAIC,MAAvB,QAAqC,kBAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,mCAA9C;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,oBAAP;AAEAR,OAAO,CAACS,GAAR,CACER,cADF,EAEEC,aAFF;;AAKA,MAAMQ,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZ,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,KAAK,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,CADF;;AAYAJ,KAAK,CAACK,SAAN,GAAkB;AAChBJ,EAAAA,IAAI,EAAEZ,SAAS,CAACiB,SAAV,CAAoB,CACxBjB,SAAS,CAACkB,KADc,EAExBlB,SAAS,CAACmB,MAFc,CAApB,EAGHC;AAJa,CAAlB;AAOA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AACtBC,EAAAA,KAAK,CAACjB,WAAW,CAACgB,IAAD,CAAZ,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQf,IAAI,IAAI;AACZf,IAAAA,MAAM,CACJ,oBAAC,KAAD,gBAAW;AAACe,MAAAA;AAAD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADI,EAEJS,WAFI,CAAN;AAID,GAPH,EAQE;AARF,GASGS,KATH,CASSC,OAAO,CAACC,KATjB;AAUD,CAXD;;AAaAR,KAAK,CAAC,WAAD,CAAL;AAEAhB,aAAa,CAACyB,UAAd","sourcesContent":["import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport App from './App';\r\nimport { AppProvider } from './context/app';\r\nimport ScrollToTop from './components/services/ScrollToTop';\r\nimport ErrorBoundary from './components/services/ErrorBoundary';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { resolvePath } from './helpers';\r\n\r\nimport './styles/main.scss';\r\n\r\nlibrary.add(\r\n  faChevronRight,\r\n  faChevronLeft,\r\n);\r\n\r\nconst Index = ({ data }) => (\r\n  <ErrorBoundary>\r\n    <AppProvider value={data}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <ScrollToTop>\r\n          <App />\r\n        </ScrollToTop>\r\n      </Router>\r\n    </AppProvider>\r\n  </ErrorBoundary>\r\n);\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n};\r\n\r\nconst RootElement = document.getElementById('root');\r\n\r\nconst setup = (file) => {\r\n  fetch(resolvePath(file))\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      render(\r\n        <Index {...{data}} />,\r\n        RootElement \r\n      );\r\n    })\r\n    // eslint-disable-next-line no-console\r\n    .catch(console.error);\r\n};\r\n\r\nsetup('data.json');\r\n\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}