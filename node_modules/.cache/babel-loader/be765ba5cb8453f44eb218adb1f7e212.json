{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HenY\\\\Documents\\\\GitHub\\\\ieo-rep\\\\ieo-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nconst useSlider = (slides, delay = 5000, doSlide = true, startSlide = 0) => {\n  const _useState = useState(startSlide),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentSlide = _useState2[0],\n        setCurrentSlide = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        goRight = _useState4[0],\n        setGoRight = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        letGo = _useState6[0],\n        setLetGo = _useState6[1];\n\n  const length = slides.length;\n  useEffect(() => {\n    if (doSlide && letGo) {\n      const interval = setInterval(() => {\n        if (goRight) {\n          currentSlide < length - 1 && setCurrentSlide(currentSlide + 1);\n\n          if (currentSlide === length - 1) {\n            setGoRight(!goRight);\n            setCurrentSlide(length - 2);\n          }\n        } else {\n          currentSlide && setCurrentSlide(currentSlide - 1);\n\n          if (currentSlide === 0) {\n            setGoRight(!goRight);\n            setCurrentSlide(1);\n          }\n        }\n      }, delay);\n      return () => clearInterval(interval);\n    }\n  }, [currentSlide, length, delay, doSlide, goRight, letGo]);\n\n  const nextSlide = () => currentSlide < length - 1 && setCurrentSlide(currentSlide + 1);\n\n  const prevSlide = () => currentSlide && setCurrentSlide(currentSlide - 1);\n\n  const setSlide = id => setCurrentSlide(id);\n\n  const toggleLetGo = () => setLetGo(!letGo);\n\n  return {\n    currentSlide,\n    nextSlide,\n    prevSlide,\n    setSlide,\n    sliderLength: length,\n    letGo,\n    toggleLetGo\n  };\n};\n\nexport default useSlider;","map":{"version":3,"sources":["C:\\Users\\HenY\\Documents\\GitHub\\ieo-rep\\ieo-website\\src\\hooks\\useTestimonialsSlider.js"],"names":["useState","useEffect","useSlider","slides","delay","doSlide","startSlide","currentSlide","setCurrentSlide","goRight","setGoRight","letGo","setLetGo","length","interval","setInterval","clearInterval","nextSlide","prevSlide","setSlide","id","toggleLetGo","sliderLength"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,KAAK,GAAG,IAAjB,EAAuBC,OAAO,GAAG,IAAjC,EAAuCC,UAAU,GAAG,CAApD,KAA0D;AAAA,oBAClCN,QAAQ,CAACM,UAAD,CAD0B;AAAA;AAAA,QACnEC,YADmE;AAAA,QACrDC,eADqD;;AAAA,qBAE5CR,QAAQ,CAAC,IAAD,CAFoC;AAAA;AAAA,QAEnES,OAFmE;AAAA,QAE1DC,UAF0D;;AAAA,qBAGhDV,QAAQ,CAAC,IAAD,CAHwC;AAAA;AAAA,QAGnEW,KAHmE;AAAA,QAG5DC,QAH4D;;AAI1E,QAAMC,MAAM,GAAGV,MAAM,CAACU,MAAtB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,OAAO,IAAIM,KAAf,EAAsB;AACpB,YAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,YAAIN,OAAJ,EAAa;AACXF,UAAAA,YAAY,GAAGM,MAAM,GAAG,CAAxB,IAA6BL,eAAe,CAACD,YAAY,GAAG,CAAhB,CAA5C;;AACA,cAAIA,YAAY,KAAKM,MAAM,GAAG,CAA9B,EAAiC;AAC/BH,YAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAD,YAAAA,eAAe,CAACK,MAAM,GAAG,CAAV,CAAf;AACD;AACF,SAND,MAMO;AACLN,UAAAA,YAAY,IAAIC,eAAe,CAACD,YAAY,GAAG,CAAhB,CAA/B;;AACA,cAAIA,YAAY,KAAK,CAArB,EAAwB;AACtBG,YAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAD,YAAAA,eAAe,CAAC,CAAD,CAAf;AACD;AACF;AACF,OAd2B,EAczBJ,KAdyB,CAA5B;AAgBA,aAAO,MAAMY,aAAa,CAACF,QAAD,CAA1B;AACD;AACF,GApBQ,EAoBN,CAACP,YAAD,EAAeM,MAAf,EAAuBT,KAAvB,EAA8BC,OAA9B,EAAuCI,OAAvC,EAAgDE,KAAhD,CApBM,CAAT;;AAsBA,QAAMM,SAAS,GAAG,MAChBV,YAAY,GAAGM,MAAM,GAAG,CAAxB,IAA6BL,eAAe,CAACD,YAAY,GAAG,CAAhB,CAD9C;;AAGA,QAAMW,SAAS,GAAG,MAAMX,YAAY,IAAIC,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAvD;;AAEA,QAAMY,QAAQ,GAAGC,EAAE,IAAIZ,eAAe,CAACY,EAAD,CAAtC;;AAEA,QAAMC,WAAW,GAAG,MAAMT,QAAQ,CAAC,CAACD,KAAF,CAAlC;;AAEA,SAAO;AACLJ,IAAAA,YADK;AAELU,IAAAA,SAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,QAJK;AAKLG,IAAAA,YAAY,EAAET,MALT;AAMLF,IAAAA,KANK;AAOLU,IAAAA;AAPK,GAAP;AASD,CA9CD;;AAgDA,eAAenB,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useSlider = (slides, delay = 5000, doSlide = true, startSlide = 0) => {\r\n  const [currentSlide, setCurrentSlide] = useState(startSlide);\r\n  const [goRight, setGoRight] = useState(true);\r\n  const [letGo, setLetGo] = useState(true);\r\n  const length = slides.length;\r\n\r\n  useEffect(() => {\r\n    if (doSlide && letGo) {\r\n      const interval = setInterval(() => {\r\n        if (goRight) {\r\n          currentSlide < length - 1 && setCurrentSlide(currentSlide + 1);\r\n          if (currentSlide === length - 1) {\r\n            setGoRight(!goRight);\r\n            setCurrentSlide(length - 2);\r\n          }\r\n        } else {\r\n          currentSlide && setCurrentSlide(currentSlide - 1);\r\n          if (currentSlide === 0) {\r\n            setGoRight(!goRight);\r\n            setCurrentSlide(1);\r\n          }\r\n        }\r\n      }, delay);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [currentSlide, length, delay, doSlide, goRight, letGo]);\r\n\r\n  const nextSlide = () =>\r\n    currentSlide < length - 1 && setCurrentSlide(currentSlide + 1);\r\n\r\n  const prevSlide = () => currentSlide && setCurrentSlide(currentSlide - 1);\r\n\r\n  const setSlide = id => setCurrentSlide(id);\r\n\r\n  const toggleLetGo = () => setLetGo(!letGo);\r\n\r\n  return {\r\n    currentSlide,\r\n    nextSlide,\r\n    prevSlide,\r\n    setSlide,\r\n    sliderLength: length,\r\n    letGo,\r\n    toggleLetGo\r\n  };\r\n};\r\n\r\nexport default useSlider;\r\n"]},"metadata":{},"sourceType":"module"}